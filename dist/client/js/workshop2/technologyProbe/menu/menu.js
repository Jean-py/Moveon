"use strict";

var menu = document.getElementById("containerMenu");
var bar1 = document.getElementById("bar1id");
var bar2 = document.getElementById("bar2id");
var bar3 = document.getElementById("bar3id");
var menuOption = document.getElementById("menuOptionId");
var sidebarMenu = document.getElementById("sidebarMenu");
var noteMessage = document.getElementById("noteMessage");
var idSession = document.getElementById("idSession");
var btnLoadFile = document.getElementById("btnLoadFile");
var inputFile = document.getElementById('logFileLoad');
var btnCleanAll = document.getElementById('btnCleanAll');
var btnLoadYtVideo = document.getElementById('loadYtVideo');
var btnSaveSegments = document.getElementById('btnSaveSegments');

var menuExtended = 0;

//menuOption.innerHTML = "Username : " + logger.getSocket_name_session();

idSession.value = logger.getSocket_name_session();

inputFile.addEventListener('change', updateImageDisplay);

btnLoadFile.addEventListener("mousedown", function (e) {
  //emulating a click on a file picking
  inputFile.click();
}, {
  passive: true
});

function updateImageDisplay() {
  var curFiles = inputFile.files;
  console.log(curFiles);
  cardManager.execute(new LoadLogCommand(curFiles));

  var notification_feedback = "File imported !";
  notificationFeedback(notification_feedback);
}

menu.addEventListener("mousedown", handleMenu, {
  passive: true
});

btnLoadYtVideo.addEventListener("mousedown", callbackLoadYtVideo);

btnCleanAll.addEventListener("mousedown", callbackCleanSegmentHistory);

btnSaveSegments.addEventListener("mousedown", callbackSaveFile);

idSession.addEventListener("blur", setSessionName, { passive: true });
function setSessionName() {
  logger.changeUsernameSocket(idSession.value);
  var notification_feedback = "Sucess! Log file is : " + idSession.value;
  notificationFeedback(notification_feedback);
}

function callbackCleanSegmentHistory() {
  if (confirm(" /!\ Voulez-vous vraiment supprimer tous les segments?")) {
    // Code à éxécuter si le l'utilisateur clique sur "OK"
    var notification_feedback = "Clean all success";
    notificationFeedback(notification_feedback);
    cardManager.execute(new CleanSegmentHistoryCommand());
    // Code à éxécuter si l'utilisateur clique sur "Annuler"
  } else {
    var notification_feedback = "Not confirmed!";
    notificationFeedback(notification_feedback);
  }
}

function callbackSaveFile() {
  console.log("saving log");
  /*arrayCard.forEach(function (arrayItem) {
    // arrayItem.updateInfo();
    //arrayItem.
  });*/
  cardManager.exportCard();
  var notification_feedback = "File saved : " + idSession.value;
  notificationFeedback(notification_feedback);
}

function callbackLoadYtVideo() {}

function handleMenu() {
  menu.classList.toggle("change");
  //sidebarMenu.classList.toggle("appearMenuSidebar");
  if (menuExtended) {
    menuExtended = 0;
    sidebarMenu.style.visibility = 'hidden'; // Show
  } else {
    sidebarMenu.style.visibility = 'visible'; // Hide
    menuExtended = 1;
  }
}

function notificationFeedback(notification_message) {
  window.location = "#oNote4";
  noteMessage.innerHTML = notification_message;
  setTimeout(function () {
    window.location = "#oNote";
  }, 2500);
}

// Get the modal
var modal = document.getElementById('myModal');

// Get the <span> element that closes the modal
var span = document.getElementsByClassName("close")[0];

// When the user clicks the button, open the modal
btnLoadYtVideo.onclick = function () {
  modal.style.display = "block";
};

// When the user clicks on <span> (x), close the modal
span.onclick = function () {
  modal.style.display = "none";
};

// When the user clicks anywhere outside of the modal, close it
window.onclick = function (event) {
  if (event.target == modal) {
    modal.style.display = "none";
  }
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1lbnUuanMiXSwibmFtZXMiOlsibWVudSIsImRvY3VtZW50IiwiZ2V0RWxlbWVudEJ5SWQiLCJiYXIxIiwiYmFyMiIsImJhcjMiLCJtZW51T3B0aW9uIiwic2lkZWJhck1lbnUiLCJub3RlTWVzc2FnZSIsImlkU2Vzc2lvbiIsImJ0bkxvYWRGaWxlIiwiaW5wdXRGaWxlIiwiYnRuQ2xlYW5BbGwiLCJidG5Mb2FkWXRWaWRlbyIsImJ0blNhdmVTZWdtZW50cyIsIm1lbnVFeHRlbmRlZCIsInZhbHVlIiwibG9nZ2VyIiwiZ2V0U29ja2V0X25hbWVfc2Vzc2lvbiIsImFkZEV2ZW50TGlzdGVuZXIiLCJ1cGRhdGVJbWFnZURpc3BsYXkiLCJlIiwiY2xpY2siLCJwYXNzaXZlIiwiY3VyRmlsZXMiLCJmaWxlcyIsImNvbnNvbGUiLCJsb2ciLCJjYXJkTWFuYWdlciIsImV4ZWN1dGUiLCJMb2FkTG9nQ29tbWFuZCIsIm5vdGlmaWNhdGlvbl9mZWVkYmFjayIsIm5vdGlmaWNhdGlvbkZlZWRiYWNrIiwiaGFuZGxlTWVudSIsImNhbGxiYWNrTG9hZFl0VmlkZW8iLCJjYWxsYmFja0NsZWFuU2VnbWVudEhpc3RvcnkiLCJjYWxsYmFja1NhdmVGaWxlIiwic2V0U2Vzc2lvbk5hbWUiLCJjaGFuZ2VVc2VybmFtZVNvY2tldCIsImNvbmZpcm0iLCJDbGVhblNlZ21lbnRIaXN0b3J5Q29tbWFuZCIsImV4cG9ydENhcmQiLCJjbGFzc0xpc3QiLCJ0b2dnbGUiLCJzdHlsZSIsInZpc2liaWxpdHkiLCJub3RpZmljYXRpb25fbWVzc2FnZSIsIndpbmRvdyIsImxvY2F0aW9uIiwiaW5uZXJIVE1MIiwic2V0VGltZW91dCIsIm1vZGFsIiwic3BhbiIsImdldEVsZW1lbnRzQnlDbGFzc05hbWUiLCJvbmNsaWNrIiwiZGlzcGxheSIsImV2ZW50IiwidGFyZ2V0Il0sIm1hcHBpbmdzIjoiOztBQUFBLElBQUlBLE9BQU9DLFNBQVNDLGNBQVQsQ0FBd0IsZUFBeEIsQ0FBWDtBQUNBLElB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YXIgbWVudSA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwiY29udGFpbmVyTWVudVwiKTtcbnZhciBiYXIxID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJiYXIxaWRcIik7XG52YXIgYmFyMiA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwiYmFyMmlkXCIpO1xudmFyIGJhcjMgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcImJhcjNpZFwiKTtcbnZhciBtZW51T3B0aW9uID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJtZW51T3B0aW9uSWRcIik7XG52YXIgc2lkZWJhck1lbnUgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcInNpZGViYXJNZW51XCIpO1xudmFyIG5vdGVNZXNzYWdlID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJub3RlTWVzc2FnZVwiKTtcbnZhciBpZFNlc3Npb24gPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcImlkU2Vzc2lvblwiKTtcbnZhciBidG5Mb2FkRmlsZSA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwiYnRuTG9hZEZpbGVcIik7XG52YXIgaW5wdXRGaWxlID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2xvZ0ZpbGVMb2FkJyk7XG52YXIgYnRuQ2xlYW5BbGwgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnYnRuQ2xlYW5BbGwnKTtcbnZhciBidG5Mb2FkWXRWaWRlbyA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdsb2FkWXRWaWRlbycpO1xudmFyIGJ0blNhdmVTZWdtZW50cyA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdidG5TYXZlU2VnbWVudHMnKTtcblxuXG5cbnZhciBtZW51RXh0ZW5kZWQgPSAwO1xuXG4vL21lbnVPcHRpb24uaW5uZXJIVE1MID0gXCJVc2VybmFtZSA6IFwiICsgbG9nZ2VyLmdldFNvY2tldF9uYW1lX3Nlc3Npb24oKTtcblxuaWRTZXNzaW9uLnZhbHVlID0gbG9nZ2VyLmdldFNvY2tldF9uYW1lX3Nlc3Npb24oKTtcblxuaW5wdXRGaWxlLmFkZEV2ZW50TGlzdGVuZXIoJ2NoYW5nZScsIHVwZGF0ZUltYWdlRGlzcGxheSk7XG5cbmJ0bkxvYWRGaWxlLmFkZEV2ZW50TGlzdGVuZXIoXCJtb3VzZWRvd25cIiwgZnVuY3Rpb24gKGUpIHtcbiAgICAvL2VtdWxhdGluZyBhIGNsaWNrIG9uIGEgZmlsZSBwaWNraW5nXG4gICAgaW5wdXRGaWxlLmNsaWNrKCk7XG4gIH0sIHtcbiAgcGFzc2l2ZTogdHJ1ZVxufSk7XG5cblxuZnVuY3Rpb24gdXBkYXRlSW1hZ2VEaXNwbGF5KCkge1xuICB2YXIgY3VyRmlsZXMgPSBpbnB1dEZpbGUuZmlsZXM7XG4gIGNvbnNvbGUubG9nKGN1ckZpbGVzKTtcbiAgY2FyZE1hbmFnZXIuZXhlY3V0ZShuZXcgTG9hZExvZ0NvbW1hbmQoY3VyRmlsZXMpKTtcbiAgXG4gIFxuICB2YXIgbm90aWZpY2F0aW9uX2ZlZWRiYWNrID0gXCJGaWxlIGltcG9ydGVkICFcIjtcbiAgbm90aWZpY2F0aW9uRmVlZGJhY2sobm90aWZpY2F0aW9uX2ZlZWRiYWNrKVxufVxuXG5cbm1lbnUuYWRkRXZlbnRMaXN0ZW5lcihcIm1vdXNlZG93blwiLCBoYW5kbGVNZW51LCB7XG4gIHBhc3NpdmU6IHRydWVcbn0pO1xuXG5idG5Mb2FkWXRWaWRlby5hZGRFdmVudExpc3RlbmVyKFwibW91c2Vkb3duXCIsIGNhbGxiYWNrTG9hZFl0VmlkZW8pO1xuXG5idG5DbGVhbkFsbC5hZGRFdmVudExpc3RlbmVyKFwibW91c2Vkb3duXCIsIGNhbGxiYWNrQ2xlYW5TZWdtZW50SGlzdG9yeSk7XG5cbmJ0blNhdmVTZWdtZW50cy5hZGRFdmVudExpc3RlbmVyKFwibW91c2Vkb3duXCIsIGNhbGxiYWNrU2F2ZUZpbGUpO1xuXG5pZFNlc3Npb24uYWRkRXZlbnRMaXN0ZW5lcihcImJsdXJcIixzZXRTZXNzaW9uTmFtZSwge3Bhc3NpdmU6IHRydWV9KTtcbmZ1bmN0aW9uIHNldFNlc3Npb25OYW1lKCl7XG4gICBsb2dnZXIuY2hhbmdlVXNlcm5hbWVTb2NrZXQoIGlkU2Vzc2lvbi52YWx1ZSApO1xuICAgdmFyIG5vdGlmaWNhdGlvbl9mZWVkYmFjayA9IFwiU3VjZXNzISBMb2cgZmlsZSBpcyA6IFwiICsgaWRTZXNzaW9uLnZhbHVlO1xuICAgIG5vdGlmaWNhdGlvbkZlZWRiYWNrKG5vdGlmaWNhdGlvbl9mZWVkYmFjayk7XG59XG5cbmZ1bmN0aW9uIGNhbGxiYWNrQ2xlYW5TZWdtZW50SGlzdG9yeSgpe1xuICBpZiAoIGNvbmZpcm0oIFwiIC8hXFwgVm91bGV6LXZvdXMgdnJhaW1lbnQgc3VwcHJpbWVyIHRvdXMgbGVzIHNlZ21lbnRzP1wiICkgKSB7XG4gICAgLy8gQ29kZSDDoCDDqXjDqWN1dGVyIHNpIGxlIGwndXRpbGlzYXRldXIgY2xpcXVlIHN1ciBcIk9LXCJcbiAgICB2YXIgbm90aWZpY2F0aW9uX2ZlZWRiYWNrID0gXCJDbGVhbiBhbGwgc3VjY2Vzc1wiO1xuICAgIG5vdGlmaWNhdGlvbkZlZWRiYWNrKG5vdGlmaWNhdGlvbl9mZWVkYmFjayk7XG4gICAgY2FyZE1hbmFnZXIuZXhlY3V0ZShuZXcgQ2xlYW5TZWdtZW50SGlzdG9yeUNvbW1hbmQoKSk7XG4gICAgLy8gQ29kZSDDoCDDqXjDqWN1dGVyIHNpIGwndXRpbGlzYXRldXIgY2xpcXVlIHN1ciBcIkFubnVsZXJcIlxuICB9IGVsc2Uge1xuICAgIHZhciBub3RpZmljYXRpb25fZmVlZGJhY2sgPSBcIk5vdCBjb25maXJtZWQhXCI7XG4gICAgbm90aWZpY2F0aW9uRmVlZGJhY2sobm90aWZpY2F0aW9uX2ZlZWRiYWNrKTtcbiAgfVxuICBcbiAgXG59XG5cbmZ1bmN0aW9uIGNhbGxiYWNrU2F2ZUZpbGUoKXtcbiAgY29uc29sZS5sb2coXCJzYXZpbmcgbG9nXCIpO1xuICAvKmFycmF5Q2FyZC5mb3JFYWNoKGZ1bmN0aW9uIChhcnJheUl0ZW0pIHtcbiAgICAvLyBhcnJheUl0ZW0udXBkYXRlSW5mbygpO1xuICAgIC8vYXJyYXlJdGVtLlxuICB9KTsqL1xuICBjYXJkTWFuYWdlci5leHBvcnRDYXJkKCk7XG4gIHZhciBub3RpZmljYXRpb25fZmVlZGJhY2sgPSBcIkZpbGUgc2F2ZWQgOiBcIiArIGlkU2Vzc2lvbi52YWx1ZTtcbiAgbm90aWZpY2F0aW9uRmVlZGJhY2sobm90aWZpY2F0aW9uX2ZlZWRiYWNrKTtcbn1cblxuZnVuY3Rpb24gY2FsbGJhY2tMb2FkWXRWaWRlbygpe1xuXG59XG5cbmZ1bmN0aW9uIGhhbmRsZU1lbnUoKXtcbiAgbWVudS5jbGFzc0xpc3QudG9nZ2xlKFwiY2hhbmdlXCIpO1xuICAvL3NpZGViYXJNZW51LmNsYXNzTGlzdC50b2dnbGUoXCJhcHBlYXJNZW51U2lkZWJhclwiKTtcbiAgaWYobWVudUV4dGVuZGVkKXtcbiAgICBtZW51RXh0ZW5kZWQgPSAwO1xuICAgIHNpZGViYXJNZW51LnN0eWxlLnZpc2liaWxpdHkgPSAnaGlkZGVuJzsgICAgIC8vIFNob3dcbiAgfSBlbHNlIHtcbiAgICBzaWRlYmFyTWVudS5zdHlsZS52aXNpYmlsaXR5ID0gJ3Zpc2libGUnOyAgICAgIC8vIEhpZGVcbiAgICBtZW51RXh0ZW5kZWQgPSAxO1xuICB9XG59XG5cbmZ1bmN0aW9uIG5vdGlmaWNhdGlvbkZlZWRiYWNrKG5vdGlmaWNhdGlvbl9tZXNzYWdlKXtcbiAgd2luZG93LmxvY2F0aW9uID0gXCIjb05vdGU0XCI7XG4gIG5vdGVNZXNzYWdlLmlubmVySFRNTCA9IG5vdGlmaWNhdGlvbl9tZXNzYWdlO1xuICBzZXRUaW1lb3V0KGZ1bmN0aW9uKCkge3dpbmRvdy5sb2NhdGlvbiA9IFwiI29Ob3RlXCI7fSwgMjUwMCk7XG59XG5cbi8vIEdldCB0aGUgbW9kYWxcbnZhciBtb2RhbCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdteU1vZGFsJyk7XG5cbi8vIEdldCB0aGUgPHNwYW4+IGVsZW1lbnQgdGhhdCBjbG9zZXMgdGhlIG1vZGFsXG52YXIgc3BhbiA9IGRvY3VtZW50LmdldEVsZW1lbnRzQnlDbGFzc05hbWUoXCJjbG9zZVwiKVswXTtcblxuLy8gV2hlbiB0aGUgdXNlciBjbGlja3MgdGhlIGJ1dHRvbiwgb3BlbiB0aGUgbW9kYWxcbmJ0bkxvYWRZdFZpZGVvLm9uY2xpY2sgPSBmdW5jdGlvbigpIHtcbiAgbW9kYWwuc3R5bGUuZGlzcGxheSA9IFwiYmxvY2tcIjtcbn07XG5cbi8vIFdoZW4gdGhlIHVzZXIgY2xpY2tzIG9uIDxzcGFuPiAoeCksIGNsb3NlIHRoZSBtb2RhbFxuc3Bhbi5vbmNsaWNrID0gZnVuY3Rpb24oKSB7XG4gIG1vZGFsLnN0eWxlLmRpc3BsYXkgPSBcIm5vbmVcIjtcbn07XG5cbi8vIFdoZW4gdGhlIHVzZXIgY2xpY2tzIGFueXdoZXJlIG91dHNpZGUgb2YgdGhlIG1vZGFsLCBjbG9zZSBpdFxud2luZG93Lm9uY2xpY2sgPSBmdW5jdGlvbihldmVudCkge1xuICBpZiAoZXZlbnQudGFyZ2V0ID09IG1vZGFsKSB7XG4gICAgbW9kYWwuc3R5bGUuZGlzcGxheSA9IFwibm9uZVwiO1xuICB9XG59O1xuXG5cbiJdfQ==