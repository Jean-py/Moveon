"use strict";

/**
 * NoSleep.js v0.5.0 - git.io/vfn01
 * Rich Tibbett
 * MIT license
 **/

(function (root) {
  // UA matching
  var ua = {
    Android: /Android/ig.test(navigator.userAgent),
    iOS: /AppleWebKit/.test(navigator.userAgent) && /Mobile\/\w+/.test(navigator.userAgent)
  };

  var media = {
    WebM: "data:video/webm;base64,GkXfo0AgQoaBAUL3gQFC8oEEQvOBCEKCQAR3ZWJtQoeBAkKFgQIYU4BnQI0VSalmQCgq17FAAw9CQE2AQAZ3aGFtbXlXQUAGd2hhbW15RIlACECPQAAAAAAAFlSua0AxrkAu14EBY8WBAZyBACK1nEADdW5khkAFVl9WUDglhohAA1ZQOIOBAeBABrCBCLqBCB9DtnVAIueBAKNAHIEAAIAwAQCdASoIAAgAAUAmJaQAA3AA/vz0AAA=",
    MP4: "data:video/mp4;base64,AAAAHGZ0eXBpc29tAAACAGlzb21pc28ybXA0MQAAAAhmcmVlAAAAG21kYXQAAAGzABAHAAABthADAowdbb9/AAAC6W1vb3YAAABsbXZoZAAAAAB8JbCAfCWwgAAAA+gAAAAAAAEAAAEAAAAAAAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAQAAAAAAAAAAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIAAAIVdHJhawAAAFx0a2hkAAAAD3wlsIB8JbCAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAQAAAAAAAAAAAAAAAAAAQAAAAAAIAAAACAAAAAABsW1kaWEAAAAgbWRoZAAAAAB8JbCAfCWwgAAAA+gAAAAAVcQAAAAAAC1oZGxyAAAAAAAAAAB2aWRlAAAAAAAAAAAAAAAAVmlkZW9IYW5kbGVyAAAAAVxtaW5mAAAAFHZtaGQAAAABAAAAAAAAAAAAAAAkZGluZgAAABxkcmVmAAAAAAAAAAEAAAAMdXJsIAAAAAEAAAEcc3RibAAAALhzdHNkAAAAAAAAAAEAAACobXA0dgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAIAAgASAAAAEgAAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABj//wAAAFJlc2RzAAAAAANEAAEABDwgEQAAAAADDUAAAAAABS0AAAGwAQAAAbWJEwAAAQAAAAEgAMSNiB9FAEQBFGMAAAGyTGF2YzUyLjg3LjQGAQIAAAAYc3R0cwAAAAAAAAABAAAAAQAAAAAAAAAcc3RzYwAAAAAAAAABAAAAAQAAAAEAAAABAAAAFHN0c3oAAAAAAAAAEwAAAAEAAAAUc3RjbwAAAAAAAAABAAAALAAAAGB1ZHRhAAAAWG1ldGEAAAAAAAAAIWhkbHIAAAAAAAAAAG1kaXJhcHBsAAAAAAAAAAAAAAAAK2lsc3QAAAAjqXRvbwAAABtkYXRhAAAAAQAAAABMYXZmNTIuNzguMw=="
  };

  function addSourceToVideo(element, type, dataURI) {
    var source = document.createElement('source');
    source.src = dataURI;
    source.type = "video/" + type;
    element.appendChild(source);
  }

  // NoSleep instance constructor
  var NoSleep = function NoSleep() {
    if (ua.iOS) {
      this.noSleepTimer = null;
    } else if (ua.Android) {
      // Set up no sleep video element
      this.noSleepVideo = document.createElement('video');
      this.noSleepVideo.setAttribute("loop", "");

      // Append nosleep video sources
      addSourceToVideo(this.noSleepVideo, "webm", media.WebM);
      addSourceToVideo(this.noSleepVideo, "mp4", media.MP4);
    }

    return this;
  };

  // Enable NoSleep instance
  NoSleep.prototype.enable = function (duration) {
    if (ua.iOS) {
      this.disable();
      this.noSleepTimer = window.setInterval(function () {
        window.location.href = '/';
        window.setTimeout(window.stop, 0);
      }, duration || 15000);
    } else if (ua.Android) {
      this.noSleepVideo.play();
    }
  };

  // Disable NoSleep instance
  NoSleep.prototype.disable = function () {
    if (ua.iOS) {
      if (this.noSleepTimer) {
        window.clearInterval(this.noSleepTimer);
        this.noSleepTimer = null;
      }
    } else if (ua.Android) {
      this.noSleepVideo.pause();
    }
  };

  // Append NoSleep API to root object
  root.NoSleep = NoSleep;
})(undefined);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIk5vU2xlZXAuanMiXSwibmFtZXMiOlsicm9vdCIsInVhIiwiQW5kcm9pZCIsInRlc3QiLCJuYXZpZ2F0b3IiLCJ1c2VyQWdlbnQiLCJpT1MiLCJtZWRpYSIsIldlYk0iLCJNUDQiLCJhZGRTb3VyY2VUb1ZpZGVvIiwiZWxlbWVudCIsInR5cGUiLCJkYXRhVVJJIiwic291cmNlIiwiZG9jdW1lbnQiLCJjcmVhdGVFbGVtZW50Iiwic3JjIiwiYXBwZW5kQ2hpbGQiLCJOb1NsZWVwIiwibm9TbGVlcFRpbWVyIiwibm9TbGVlcFZpZGVvIiwic2V0QXR0cmlidXRlIiwicHJvdG90eXBlIiwiZW5hYmxlIiwiZHVyYXRpb24iLCJkaXNhYmxlIiwid2luZG93Iiwic2V0SW50ZXJ2YWwiLCJsb2NhdGlvbiIsImhyZWYiLCJzZXRUaW1lb3V0Iiwic3RvcCIsInBsYXkiLCJjbGVhckludGVydmFsIiwicGF1c2UiXSwibWFwcGluZ3MiOiI7O0FBQUE7Ozs7OztBQUtBLENBQUMsVUFBQSxBQUFTLE1BQU0sQUFDZDtBQUNBO01BQUk7YUFDTyxZQUFBLEFBQVksS0FBSyxVQURuQixBQUNFLEFBQTJCLEFBQ3BDO1NBQUssY0FBQSxBQUFjLEtBQUssVUFBbkIsQUFBNkIsY0FBYyxjQUFBLEFBQWMsS0FBSyxVQUZyRSxBQUFTLEFBRXlDLEFBQTZCLEFBRy9FO0FBTFMsQUFDUDs7TUFJRTtVQUFRLEFBQ0osQUFDTjtTQUZGLEFBQVksQUFFTCxBQUdQO0FBTFksQUFDVjs7V0FJRixBQUFTLGlCQUFULEFBQTBCLFNBQTFCLEFBQW1DLE1BQW5DLEFBQXlDLFNBQVMsQUFDaEQ7UUFBSSxTQUFTLFNBQUEsQUFBUyxjQUF0QixBQUFhLEFBQXVCLEFBQ3BDO1dBQUEsQUFBTyxNQUFQLEFBQWEsQUFDYjtXQUFBLEFBQU8sT0FBTyxXQUFkLEFBQXlCLEFBQ3pCO1lBQUEsQUFBUSxZQUFSLEFBQW9CLEFBQ3JCO0FBRUQ7O0FBQ0E7TUFBSSxVQUFVLFNBQVYsQUFBVSxVQUFXLEFBQ3ZCO1FBQUksR0FBSixBQUFPLEtBQUssQUFDVjtXQUFBLEFBQUssZUFBTCxBQUFvQixBQUNyQjtBQUZELFdBRU8sSUFBSSxHQUFKLEFBQU8sU0FBUyxBQUNyQjtBQUNBO1dBQUEsQUFBSyxlQUFlLFNBQUEsQUFBUyxjQUE3QixBQUFvQixBQUF1QixBQUMzQztXQUFBLEFBQUssYUFBTCxBQUFrQixhQUFsQixBQUErQixRQUEvQixBQUF1QyxBQUV2Qzs7QUFDQTt1QkFBaUIsS0FBakIsQUFBc0IsY0FBdEIsQUFBb0MsUUFBUSxNQUE1QyxBQUFrRCxBQUNsRDt1QkFBaUIsS0FBakIsQUFBc0IsY0FBdEIsQUFBb0MsT0FBTyxNQUEzQyxBQUFpRCxBQUNsRDtBQUVEOztXQUFBLEFBQU8sQUFDUjtBQWRELEFBZ0JBOztBQUNBO1VBQUEsQUFBUSxVQUFSLEFBQWtCLFNBQVMsVUFBQSxBQUFTLFVBQVUsQUFDNUM7UUFBSSxHQUFKLEFBQU8sS0FBSyxBQUNWO1dBQUEsQUFBSyxBQUNMO1dBQUEsQUFBSyxzQkFBZSxBQUFPLFlBQVksWUFBVyxBQUNoRDtlQUFBLEFBQU8sU0FBUCxBQUFnQixPQUFoQixBQUF1QixBQUN2QjtlQUFBLEFBQU8sV0FBVyxPQUFsQixBQUF5QixNQUF6QixBQUErQixBQUNoQztBQUhtQixPQUFBLEVBR2pCLFlBSEgsQUFBb0IsQUFHTCxBQUNoQjtBQU5ELFdBTU8sSUFBSSxHQUFKLEFBQU8sU0FBUyxBQUNyQjtXQUFBLEFBQUssYUFBTCxBQUFrQixBQUNuQjtBQUNGO0FBVkQsQUFZQTs7QUFDQTtVQUFBLEFBQVEsVUFBUixBQUFrQixVQUFVLFlBQVcsQUFDckM7UUFBSSxHQUFKLEFBQU8sS0FBSyxBQUNWO1VBQUksS0FBSixBQUFTLGNBQWMsQUFDckI7ZUFBQSxBQUFPLGNBQWMsS0FBckIsQUFBMEIsQUFDMUI7YUFBQSxBQUFLLGVBQUwsQUFBb0IsQUFDckI7QUFDRjtBQUxELFdBS08sSUFBSSxHQUFKLEFBQU8sU0FBUyxBQUNyQjtXQUFBLEFBQUssYUFBTCxBQUFrQixBQUNuQjtBQUNGO0FBVEQsQUFXQTs7QUFDQTtPQUFBLEFBQUssVUFBTCxBQUFlLEFBQ2hCO0FBL0REIiwiZmlsZSI6Ik5vU2xlZXAuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIE5vU2xlZXAuanMgdjAuNS4wIC0gZ2l0LmlvL3ZmbjAxXG4gKiBSaWNoIFRpYmJldHRcbiAqIE1JVCBsaWNlbnNlXG4gKiovXG4oZnVuY3Rpb24ocm9vdCkge1xuICAvLyBVQSBtYXRjaGluZ1xuICB2YXIgdWEgPSB7XG4gICAgQW5kcm9pZDogL0FuZHJvaWQvaWcudGVzdChuYXZpZ2F0b3IudXNlckFnZW50KSxcbiAgICBpT1M6IC9BcHBsZVdlYktpdC8udGVzdChuYXZpZ2F0b3IudXNlckFnZW50KSAmJiAvTW9iaWxlXFwvXFx3Ky8udGVzdChuYXZpZ2F0b3IudXNlckFnZW50KVxuICB9O1xuXG4gIHZhciBtZWRpYSA9IHtcbiAgICBXZWJNOiBcImRhdGE6dmlkZW8vd2VibTtiYXNlNjQsR2tYZm8wQWdRb2FCQVVMM2dRRkM4b0VFUXZPQkNFS0NRQVIzWldKdFFvZUJBa0tGZ1FJWVU0Qm5RSTBWU2FsbVFDZ3ExN0ZBQXc5Q1FFMkFRQVozYUdGdGJYbFhRVUFHZDJoaGJXMTVSSWxBQ0VDUFFBQUFBQUFBRmxTdWEwQXhya0F1MTRFQlk4V0JBWnlCQUNLMW5FQURkVzVraGtBRlZsOVdVRGdsaG9oQUExWlFPSU9CQWVCQUJyQ0JDTHFCQ0I5RHRuVkFJdWVCQUtOQUhJRUFBSUF3QVFDZEFTb0lBQWdBQVVBbUphUUFBM0FBL3Z6MEFBQT1cIixcbiAgICBNUDQ6IFwiZGF0YTp2aWRlby9tcDQ7YmFzZTY0LEFBQUFIR1owZVhCcGMyOXRBQUFDQUdsemIyMXBjMjh5YlhBME1RQUFBQWhtY21WbEFBQUFHMjFrWVhRQUFBR3pBQkFIQUFBQnRoQURBb3dkYmI5L0FBQUM2VzF2YjNZQUFBQnNiWFpvWkFBQUFBQjhKYkNBZkNXd2dBQUFBK2dBQUFBQUFBRUFBQUVBQUFBQUFBQUFBQUFBQUFBQkFBQUFBQUFBQUFBQUFBQUFBQUFBQVFBQUFBQUFBQUFBQUFBQUFBQUFRQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFJQUFBSVZkSEpoYXdBQUFGeDBhMmhrQUFBQUQzd2xzSUI4SmJDQUFBQUFBUUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUJBQUFBQUFBQUFBQUFBQUFBQUFBQUFRQUFBQUFBQUFBQUFBQUFBQUFBUUFBQUFBQUlBQUFBQ0FBQUFBQUJzVzFrYVdFQUFBQWdiV1JvWkFBQUFBQjhKYkNBZkNXd2dBQUFBK2dBQUFBQVZjUUFBQUFBQUMxb1pHeHlBQUFBQUFBQUFBQjJhV1JsQUFBQUFBQUFBQUFBQUFBQVZtbGtaVzlJWVc1a2JHVnlBQUFBQVZ4dGFXNW1BQUFBRkhadGFHUUFBQUFCQUFBQUFBQUFBQUFBQUFBa1pHbHVaZ0FBQUJ4a2NtVm1BQUFBQUFBQUFBRUFBQUFNZFhKc0lBQUFBQUVBQUFFY2MzUmliQUFBQUxoemRITmtBQUFBQUFBQUFBRUFBQUNvYlhBMGRnQUFBQUFBQUFBQkFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBSUFBZ0FTQUFBQUVnQUFBQUFBQUFBQVFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQmovL3dBQUFGSmxjMlJ6QUFBQUFBTkVBQUVBQkR3Z0VRQUFBQUFERFVBQUFBQUFCUzBBQUFHd0FRQUFBYldKRXdBQUFRQUFBQUVnQU1TTmlCOUZBRVFCRkdNQUFBR3lUR0YyWXpVeUxqZzNMalFHQVFJQUFBQVljM1IwY3dBQUFBQUFBQUFCQUFBQUFRQUFBQUFBQUFBY2MzUnpZd0FBQUFBQUFBQUJBQUFBQVFBQUFBRUFBQUFCQUFBQUZITjBjM29BQUFBQUFBQUFFd0FBQUFFQUFBQVVjM1JqYndBQUFBQUFBQUFCQUFBQUxBQUFBR0IxWkhSaEFBQUFXRzFsZEdFQUFBQUFBQUFBSVdoa2JISUFBQUFBQUFBQUFHMWthWEpoY0hCc0FBQUFBQUFBQUFBQUFBQUFLMmxzYzNRQUFBQWpxWFJ2YndBQUFCdGtZWFJoQUFBQUFRQUFBQUJNWVhabU5USXVOemd1TXc9PVwiXG4gIH07XG5cbiAgZnVuY3Rpb24gYWRkU291cmNlVG9WaWRlbyhlbGVtZW50LCB0eXBlLCBkYXRhVVJJKSB7XG4gICAgdmFyIHNvdXJjZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3NvdXJjZScpO1xuICAgIHNvdXJjZS5zcmMgPSBkYXRhVVJJO1xuICAgIHNvdXJjZS50eXBlID0gXCJ2aWRlby9cIiArIHR5cGU7XG4gICAgZWxlbWVudC5hcHBlbmRDaGlsZChzb3VyY2UpO1xuICB9XG5cbiAgLy8gTm9TbGVlcCBpbnN0YW5jZSBjb25zdHJ1Y3RvclxuICB2YXIgTm9TbGVlcCA9IGZ1bmN0aW9uKCkge1xuICAgIGlmICh1YS5pT1MpIHtcbiAgICAgIHRoaXMubm9TbGVlcFRpbWVyID0gbnVsbDtcbiAgICB9IGVsc2UgaWYgKHVhLkFuZHJvaWQpIHtcbiAgICAgIC8vIFNldCB1cCBubyBzbGVlcCB2aWRlbyBlbGVtZW50XG4gICAgICB0aGlzLm5vU2xlZXBWaWRlbyA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3ZpZGVvJyk7XG4gICAgICB0aGlzLm5vU2xlZXBWaWRlby5zZXRBdHRyaWJ1dGUoXCJsb29wXCIsIFwiXCIpO1xuXG4gICAgICAvLyBBcHBlbmQgbm9zbGVlcCB2aWRlbyBzb3VyY2VzXG4gICAgICBhZGRTb3VyY2VUb1ZpZGVvKHRoaXMubm9TbGVlcFZpZGVvLCBcIndlYm1cIiwgbWVkaWEuV2ViTSk7XG4gICAgICBhZGRTb3VyY2VUb1ZpZGVvKHRoaXMubm9TbGVlcFZpZGVvLCBcIm1wNFwiLCBtZWRpYS5NUDQpO1xuICAgIH1cblxuICAgIHJldHVybiB0aGlzO1xuICB9O1xuXG4gIC8vIEVuYWJsZSBOb1NsZWVwIGluc3RhbmNlXG4gIE5vU2xlZXAucHJvdG90eXBlLmVuYWJsZSA9IGZ1bmN0aW9uKGR1cmF0aW9uKSB7XG4gICAgaWYgKHVhLmlPUykge1xuICAgICAgdGhpcy5kaXNhYmxlKCk7XG4gICAgICB0aGlzLm5vU2xlZXBUaW1lciA9IHdpbmRvdy5zZXRJbnRlcnZhbChmdW5jdGlvbigpIHtcbiAgICAgICAgd2luZG93LmxvY2F0aW9uLmhyZWYgPSAnLyc7XG4gICAgICAgIHdpbmRvdy5zZXRUaW1lb3V0KHdpbmRvdy5zdG9wLCAwKTtcbiAgICAgIH0sIGR1cmF0aW9uIHx8IDE1MDAwKTtcbiAgICB9IGVsc2UgaWYgKHVhLkFuZHJvaWQpIHtcbiAgICAgIHRoaXMubm9TbGVlcFZpZGVvLnBsYXkoKTtcbiAgICB9XG4gIH07XG5cbiAgLy8gRGlzYWJsZSBOb1NsZWVwIGluc3RhbmNlXG4gIE5vU2xlZXAucHJvdG90eXBlLmRpc2FibGUgPSBmdW5jdGlvbigpIHtcbiAgICBpZiAodWEuaU9TKSB7XG4gICAgICBpZiAodGhpcy5ub1NsZWVwVGltZXIpIHtcbiAgICAgICAgd2luZG93LmNsZWFySW50ZXJ2YWwodGhpcy5ub1NsZWVwVGltZXIpO1xuICAgICAgICB0aGlzLm5vU2xlZXBUaW1lciA9IG51bGw7XG4gICAgICB9XG4gICAgfSBlbHNlIGlmICh1YS5BbmRyb2lkKSB7XG4gICAgICB0aGlzLm5vU2xlZXBWaWRlby5wYXVzZSgpO1xuICAgIH1cbiAgfTtcblxuICAvLyBBcHBlbmQgTm9TbGVlcCBBUEkgdG8gcm9vdCBvYmplY3RcbiAgcm9vdC5Ob1NsZWVwID0gTm9TbGVlcDtcbn0pKHRoaXMpO1xuIl19